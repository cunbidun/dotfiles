// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+alt+l",
    "command": "editor.action.formatDocument",
  },
  {
    "key": "ctrl+alt+b",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "${CPCLI_PATH}/main.sh \"${fileDirname}\"/ 0\u000D"
    },
    "when": "resourceExtname == .cpp"
  },
  {
    "key": "ctrl+alt+e",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "${CPCLI_PATH}/main.sh \"${fileDirname}\"/ 1\u000D"
    },
    "when": "resourceExtname == .cpp"
  },
  {
    "key": "ctrl+alt+shift+b",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "${CPCLI_PATH}/main.sh \"${fileDirname}\"/ 2\u000D"
    },
    "when": "resourceExtname == .cpp"
  },
  {
    "key": "ctrl+alt+t",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "${CPCLI_PATH}/main.sh \"${fileDirname}\"/ 3\u000D"
    },
    "when": "resourceExtname == .cpp"
  },
  {
    "key": "ctrl+alt+a",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "${CPCLI_PATH}/main.sh \"${fileDirname}\"/ 4\u000D"
    },
    "when": "resourceExtname == .cpp"
  },
  {
    "key": "ctrl+alt+n",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "${CPCLI_PATH}/main.sh \"${fileDirname}\"/\u000D"
    }
  },
  {
    "key": "alt+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "alt+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "alt+enter",
    "command": "-notebook.cell.executeAndInsertBelow",
    "when": "notebookEditorFocused"
  },
  {
    "key": "alt+enter",
    "command": "-search.action.openInEditor",
    "when": "hasSearchResult && searchViewletFocus"
  },
  {
    "key": "alt+enter",
    "command": "-debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  {
    "key": "alt+enter",
    "command": "-editor.action.selectAllMatches",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+enter",
    "command": "-python.datascience.runcurrentcellandaddbelow",
    "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !editorHasSelection && !notebookEditorFocused"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  }
]
